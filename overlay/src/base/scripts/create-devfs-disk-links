#!@@XSHELL@@
#
#  Creates symlinks in /dev/disk/by-{uuid,label,partuuid,id}.
#
#  Usage: create-devfs-disk-links [-f|--force|-n|--noforce] [dev..]
#

set -u
if [ -z "${__HAVE_FISCH_SHELLFUNC__-}" ]; then
    . "@@FUNCTIONS@@" || exit 9
fi



## _do_create_disk_link ( by_name, dev_name, link_name )
##
_do_create_disk_link() {
    [ -n "${3}" ] || return 0
    <%%locals link=/dev/disk/by-${1}/${3} %>

    if test_fs_lexists "${link}"; then
        if [ "${FORCE_DISK_SYMLINK_CREATION:-X}" = "y" ]; then
            autodie rm -- "${link}"
        else
            veinfo "Not creating disk by-${1} link ${3}->${2}: exists"
            return 0
        fi
    fi

    veinfo "Creating disk by-${1} link ${3}->${2}"
    dosym  "../../${2}" "${link}"
}


## create_disk_uuid_label_partuuid_links ( dev, dev_name )
##
##  Creates links in /dev/disk/by-{uuid,label,partuuid}.
##
##if qwhich "${X_BLKID:-blkid}"; then
create_disk_uuid_label_partuuid_links() {
    [ -n "${1-}" ] && [ -n "${2-}" ] || return @@EX_USAGE@@

    <%% locals buf %>
    <%% locals UUID= LABEL= PARTUUID= %>

    buf="$(
        if \
            s="$( "${X_BLKID:-blkid}" "${1}" )" && \
            [ -n "${s}" ] && \
            eval "${s#*:}"
        then
            printf '%s="%s"\n'  UUID      "${UUID}"
            printf '%s="%s"\n'  LABEL     "${LABEL}"
            printf '%s="%s"\n'  PARTUUID  "${PARTUUID}"
        fi
    )" && [ -n "${buf}" ] || return 0
    eval "${buf}" || return

    _do_create_disk_link uuid     "${2}" "${UUID}"
    _do_create_disk_link label    "${2}" "${LABEL}"

    _do_create_disk_link partuuid "${2}" "${PARTUUID}"
}
##else
##create_disk_uuid_label_partuuid_links() { return @@EX_NOT_SUPPORTED@@; }
##fi


## create_disk_id_links ( dev, [dev_name] )
##
##
##  Creates links in /dev/disk/by-id.
##
if qwhich "${X_DISKID:-diskid}"; then
create_disk_id_links() {
    [ -n "${1-}" ] && [ -n "${2-}" ] || return @@EX_USAGE@@

    <%%locals buf part_suffix %>
    <%%locals ID_BUS= ID_SERIAL= ID_WWN_WITH_EXTENSION= %>

    part_suffix=
    case "${2:?}" in
        [sh]d*[a-z]*)
            # sda, ..., sdX, sdaa, ..., sdXY, ...
            part_suffix="${2#[sh]d*[a-z]}"
            [ -z "${part_suffix}" ] || part_suffix="-part${part_suffix}"
        ;;

        sr*)
            :
        ;;

        *)
            # not supported
            return @@EX_NOT_SUPPORTED@@
        ;;
    esac

    # get ID_BUS, ID_SERIAL, ID_WWN_WITH_EXTENSION
    buf="$(
        "${X_DISKID:-diskid}" --mdev "${1}"
    )" && [ -n "${buf}" ] || return 0
    eval "${buf}" || return

    if [ -n "${ID_BUS}" ] && [ -n "${ID_SERIAL}" ]; then
        _do_create_disk_link id "${2}" "${ID_BUS}-${ID_SERIAL}${part_suffix}"
    fi

    if [ -n "${ID_WWN_WITH_EXTENSION}" ]; then
        _do_create_disk_link \
            id "${2}" "wwn-${ID_WWN_WITH_EXTENSION}${part_suffix}"
    fi
}
else
create_disk_id_links() { return @@EX_NOT_SUPPORTED@@; }
fi


## create_disk_id_links ( dev, dev_name )
create_disk_links() {
    create_disk_uuid_label_partuuid_links "${@}"
    create_disk_id_links "${@}"
    return 0
}



dodir /dev/disk/by-uuid
dodir /dev/disk/by-partuuid
dodir /dev/disk/by-label
dodir /dev/disk/by-id

FORCE_DISK_SYMLINK_CREATION=
case "${1-}" in
    -f|--force)
        FORCE_DISK_SYMLINK_CREATION=y
        shift
    ;;
    -n|--noforce)
        FORCE_DISK_SYMLINK_CREATION=n
        shift
    ;;
esac

if [ ${#} -eq 0 ]; then
    : "${FORCE_DISK_SYMLINK_CREATION:=n}"

    for sysfs_blockdev in /sys/class/block/*; do
        if [ -e "${sysfs_blockdev}" ]; then
            dev_name="${sysfs_blockdev##*/}"
            dev="/dev/${dev_name}"

            if [ -b "${dev}" ]; then
                create_disk_links "${dev}" "${dev_name}"
            fi
        fi
    done

    exit 0

else
    excode=0
    : "${FORCE_DISK_SYMLINK_CREATION:=y}"

    while [ ${#} -gt 0 ]; do
        dev=
        dev_name=

        case "${1}" in
            "")
                @@NOP@@
            ;;

            /dev/*/*|/dev/)
                die "arg not supported: ${1}"
            ;;

            /dev/*)
                dev_name="${1##*/}"
                dev="${1}"
            ;;

            */*)
                die "arg not supported: ${1}"
            ;;

            *)
                dev_name="${1}"
                dev="/dev/${dev_name}"
            ;;
        esac

        if [ -z "${dev}" ]; then
            @@NOP@@

        elif [ ! -b "${dev}" ]; then
            eerror "dev not found: ${dev}"
            [ ${excode} -ne 0 ] || excode=1

        else
            create_disk_links "${dev}" "${dev_name}" || excode=2
        fi

        shift
    done

    exit "${excode}"
fi
